# Device Specific Config
esphome:
  name: ${name}
  comment: ${device_description}
  platformio_options:
    board_build.flash_mode: dio
    board_build.extra_flags:
      - "-DARDUINO_USB_CDC_ON_BOOT=0"  # Override, defaults to '-DARDUINO_USB_CDC_ON_BOOT=1'
  project:
    name: "${project_name}"
    version: "${project_version}"

esp32:
  # board: um_tinys3 has issues with the ESP32-S3 OTA, do not use this board
  # board: um_tinys3
  # board: esp32-s3-devkitc-1 works with the ESP32-S3 OTA, using this as a workaround
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: arduino
    platform_version: 5.2.0

external_components:
  - source:
      type: local
      path: my_external_components/tuya_cover_custom

captive_portal:

web_server:
  port: 80
  auth:
    username: admin
    password: !secret web_server_password
  include_internal: true
  local: true


uart:
    rx_pin: GPIO6
    tx_pin: GPIO7
    baud_rate: 9600
    debug:
      direction: BOTH
      dummy_receiver: false
      sequence:
        - lambda: UARTDebug::log_hex(direction, bytes, ':');

# Register the Tuya MCU connection
# tuya:
tuya_custom:

cover:
  - platform: "tuya_custom"
    id: "${device_id_white}"
    name: "${cover_name}"
    control_datapoint: 102
    position_datapoint: 101
    position_report_datapoint: 101
    # direction_datapoint incorrect helps for now as the reporting is inverted but commands register correctly.
    # invert position fixes the inverted reporting as long as the datapoint is set incorrectly.
    direction_datapoint: 99
    # direction_datapoint: 103 (old reference)
    min_value: 0
    max_value: 100
    invert_position: true
    device_class: curtain

