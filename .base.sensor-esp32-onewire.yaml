sensor:
  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${friendly_name} Signal strength
    update_interval: 60s
    internal: true
  # Uptime Sensor
  - platform: uptime
    name: "${friendly_name} Uptime"
    id: uptime_sensor
    update_interval: 360s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

# Dallas - Shelly Split OneWire
  - platform: dallas
    index: 0
    name: "Temperature #1"
  # - platform: dallas
  #   index: 0
  #   name: "Temperature #1"
  # - platform: onewiretemperature
  #   index: 0
  #   name: "Temperature #1"
# Dallas - Shelly Split OneWire
  # - platform: dallasng
  #   index: 0
  #   name: Temperature
  #   resolution: 12
  #   # expire_after: 1000s
  #   filters:
  #     - filter_out: NAN