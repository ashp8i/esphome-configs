substitutions:
  device_ssid: "433test"
  device_name: 433test
  device_main_id: 433test1
  device_description: "433test."
  friendly_name: "433test"    # Put the name that you want to see in Home Assistant.

esphome:
  name: ${device_name}
  comment: ${device_description}
  platform: ESP32
  board: esp32dev

wifi:
    ssid: !secret wifi_all_ssid
    password: !secret wifi_all_password

    # Enable fallback hotspot (captive portal) in case wifi connection fails
    ap:
      ssid: ${device_ssid} Fallback Hotspot
      password: !secret ap_password

captive_portal:

# Enable logging
# Example configuration entry
debug:

# Logger must be at least debug (default)
logger:
  level: debug

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  safe_mode: true
  password: !secret ota_password

web_server:
  port: 80

globals:
  - id: last_light_on
    type: int
    restore_value: no
    initial_value: '1'

remote_receiver:
  pin:
    number: GPIO27
    mode: INPUT_PULLUP
  dump:
    - lg
    - midea
    - nec
    - panasonic
    - pioneer
    - jvc
    - samsung
    - samsung36
    - sony
    - toshiba_ac
    - rc_switch 
    - rc5
  filter: 50us
  idle: 5ms
  tolerance: 50
  
# IR Remote Binary Sensors

# Sensors with general information.
sensor:
  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${friendly_name} Signal strength
    update_interval: 60s
    internal: true
    
text_sensor:
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP
    ssid:
      name: ${friendly_name} SSID
    bssid:
      name: ${friendly_name} BSSID
  # Expose Uptime
  - platform: template
    name: ${friendly_name} Uptime
    id: uptime_HA
    icon: mdi:clock-start
    
switch:
    # this provides for a possibility to restart from the web console or Home automation should we ever need it
  - platform: restart
    name: "Restart"